version: "3.8"

services:
  frontend:
    build:
      context: ./seonshine_frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./seonshine_frontend/src:/app/src
      - /app/node_modules
      - /app/build
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
    restart: always

  backend:
    build:
      context: ./seonshine_backend
      dockerfile: Dockerfile.dev
    environment:
      - NODE_ENV=development
      - DB_HOST=db
      - DB_USER=seonshine_mgr
      - DB_PASSWORD=seonshine@2
      - USER_DB_NAME=user_db
      - COMMON_DB_NAME=common_db
      - RESTAURANT_DB_NAME=restaurant_db
      - ORDER_DB_NAME=order_db
    volumes:
      - ./seonshine_backend:/app
    ports:
      - "5050:5050"
    depends_on:
      db:
        condition: service_healthy
    restart: always
    # env_file:
    #   - ./seonshine_backend/.env

  db:
    image: mysql:8.0.36
    ports:
      - "3306:3306"
    environment:
      MYSQL_USER: seonshine_mgr
      MYSQL_PASSWORD: seonshine@2
      MYSQL_ROOT_PASSWORD: seonshine@2
    volumes:
      - mysql-data:/var/lib/mysql
      - ./seonshine_db/schema:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost --silent"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s
    restart: always

  fileserver:
    build:
      context: ./seonshine_fileserver
      dockerfile: Dockerfile.dev
    ports:
      - "4000:4000"
    volumes:
      - ./seonshine_fileserver/uploads:/app/uploads
    environment:
      - NODE_ENV=development
    restart: always

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "9000:9000"
    restart: always

volumes:
  mysql-data:
  portainer_data:
