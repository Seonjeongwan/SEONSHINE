#docker-compose.dev.yml
version: "3.8"

services:
  frontend:
    build:
      context: ./seonshine_frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./seonshine_frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    restart: always

  backend:
    build:
      context: ./seonshine_backend
      dockerfile: Dockerfile.dev
    ports:
      - "5050:5050"
    volumes:
      - ./seonshine_backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DB_HOST=db
      - DB_USER=seonshine_mgr
      - DB_PASSWORD=seonshine@2
      - USER_DB_NAME=user_db
      - COMMON_DB_NAME=common_db
      - RESTAURANT_DB_NAME=restaurant_db
      - ORDER_DB_NAME=order_db
      - UPLOAD_API_URL=http://fileserver:4000
    command: sh -c "npm run migrate:all && npm run seed:all && npm run dev"
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    restart: always

  db:
    image: mysql:8.0.36
    ports:
      - "3306:3306"
    environment:
      - MYSQL_USER=seonshine_mgr
      - MYSQL_PASSWORD=seonshine@2
      - MYSQL_ROOT_PASSWORD=seonshine@2
    volumes:
      - mysql-data:/var/lib/mysql
      - ./seonshine_db/schema:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost --silent"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s
    restart: always

  fileserver:
    build:
      context: ./seonshine_fileserver
      dockerfile: Dockerfile.dev
    ports:
      - "4000:4000"
    volumes:
      - ./seonshine_fileserver/uploads:/app/uploads
    environment:
      - NODE_ENV=development
    restart: always
  redis:
    image: redis:6.2
    ports:
      - "6379:6379"

volumes:
  mysql-data:
