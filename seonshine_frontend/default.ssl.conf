server {
    listen 80;
    server_name seonshine.net www.seonshine.net;

    location ~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }

    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;

    # 기본 파일이 없을 경우 404 페이지를 표시
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }
}

server {
    listen 443 ssl http2;
    server_name seonshine.net www.seonshine.net;

    root /usr/share/nginx/html;

    index index.html;

    ssl_certificate /etc/letsencrypt/live/seonshine.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/seonshine.net/privkey.pem;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location /api {
        proxy_pass http://backend:5050;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /uploads {
        proxy_pass http://fileserver:4000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    location ~* \.html$ {
        add_header Content-Type text/html;
    }

    location ~* \.js$ {
        add_header Content-Type application/javascript;
    }

    location ~* \.css$ {
        add_header Content-Type text/css;
    }

    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
}