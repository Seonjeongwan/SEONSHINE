version: "3.8"

services:
  frontend:
    image: seonshinevn/seonshine_frontend:prod
    pull_policy: always
    ports:
      - "80:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - ./src:/usr/share/nginx/html
    depends_on:
      - backend
    restart: always
    environment:
      - NODE_ENV=production

  backend:
    image: seonshinevn/seonshine_backend:prod
    pull_policy: always
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_USER=seonshine_mgr
      - DB_PASSWORD=seonshine@2
      - USER_DB_NAME=user_db
      - COMMON_DB_NAME=common_db
      - RESTAURANT_DB_NAME=restaurant_db
      - ORDER_DB_NAME=order_db
    ports:
      - "5050:5050"
    # command: sh -c "npm run migrate:all && npm run seed:all && npm run start"
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    restart: always

  db:
    image: mysql:8.0.36
    ports:
      - "3306:3306"
    environment:
      - MYSQL_USER=seonshine_mgr
      - MYSQL_PASSWORD=seonshine@2
      - MYSQL_ROOT_PASSWORD=seonshine@2
    volumes:
      - mysql-data:/var/lib/mysql
      - ./seonshine_db/schema:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost --silent"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s
    restart: always

  fileserver:
    image: seonshinevn/seonshine_fileserver:prod
    ports:
      - "4000:4000"
    volumes:
      - ./seonshine_fileserver/uploads:/app/uploads
    restart: always
    environment:
      - NODE_ENV=production

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "9000:9000"
    restart: always

  redis:
    image: redis:6.2
    ports:
      - "6379:6379"

volumes:
  mysql-data:
  portainer_data:
