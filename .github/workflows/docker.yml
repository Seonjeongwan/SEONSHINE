name: Build and Deploy

on:
  push:
    branches:
      - main
      - develop
    paths:
      - "seonshine_frontend/**"
      - "seonshine_backend/**"
      - "seonshine_db/**"
      - "seonshine_fileserver/**"

jobs:
  check-changed-files:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.check.outputs.frontend }}
      backend: ${{ steps.check.outputs.backend }}
      fileserver: ${{ steps.check.outputs.fileserver }}
      any_changes: ${{ steps.check.outputs.any_changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Check for changed files
        id: check
        run: |
          if [ "$(git rev-list --count HEAD)" -eq 1 ]; then
            echo "::set-output name=frontend::true"
            echo "::set-output name=backend::true"
            echo "::set-output name=fileserver::true"
            echo "::set-output name=any_changes::true"
          else
            FRONTEND_CHANGED=$(git diff --name-only HEAD HEAD~1 | grep 'seonshine_frontend' || echo '')
            BACKEND_CHANGED=$(git diff --name-only HEAD HEAD~1 | grep 'seonshine_backend' || echo '')
            FILESERVER_CHANGED=$(git diff --name-only HEAD HEAD~1 | grep 'seonshine_fileserver' || echo '')

            if [ "$FRONTEND_CHANGED" != '' ] || [ "$BACKEND_CHANGED" != '' ] || [ "$FILESERVER_CHANGED" != '' ]; then
              ANY_CHANGES=true
            else
              ANY_CHANGES=false
            fi

            echo "::set-output name=frontend::$FRONTEND_CHANGED"
            echo "::set-output name=backend::$BACKEND_CHANGED"
            echo "::set-output name=fileserver::$FILESERVER_CHANGED"
            echo "::set-output name=any_changes::$ANY_CHANGES"
          fi

  build-and-push:
    needs: check-changed-files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, backend, fileserver]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Create Docker Buildx builder
        run: |
          docker buildx create --name mybuilder --use
          docker buildx inspect --bootstrap
          echo "Docker Buildx builder created"

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.service }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.service }}-

      - name: Build and push image for main
        if: github.ref == 'refs/heads/main' && needs.check-changed-files.outputs.${{ matrix.service }} != ''
        uses: docker/build-push-action@v5
        with:
          context: ./seonshine_${{ matrix.service }}
          file: ./seonshine_${{ matrix.service }}/Dockerfile.prod
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/seonshine_${{ matrix.service }}:prod
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push image for develop
        if: github.ref == 'refs/heads/develop' && needs.check-changed-files.outputs.${{ matrix.service }} != ''
        uses: docker/build-push-action@v5
        with:
          context: ./seonshine_${{ matrix.service }}
          file: ./seonshine_${{ matrix.service }}/Dockerfile.dev
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/seonshine_${{ matrix.service }}:dev
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  deploy:
    needs: [check-changed-files, build-and-push]
    runs-on: ubuntu-latest
    if: needs.check-changed-files.outputs.any_changes == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH key
        run: |
          echo "${{ secrets.SSH_KEY }}" | tr -d '\r' > private_key
          chmod 600 private_key

      - name: SSH into server for main
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "SSH connection successful"
            if [ ! -d /home/ubuntu/SEONSHINE ]; then
              mkdir -p /home/ubuntu/SEONSHINE
              git clone https://github.com/Seonjeongwan/SEONSHINE.git /home/ubuntu/SEONSHINE
            fi
            cd /home/ubuntu/SEONSHINE
            git reset --hard HEAD
            git pull origin main
            export COMPOSE_HTTP_TIMEOUT=240
            docker-compose -f docker-compose.prod.yml down
            docker-compose -f docker-compose.prod.yml pull

            if [ "${{ needs.check-changed-files.outputs.frontend }}" != '' ]; then
              docker-compose -f docker-compose.prod.yml up -d frontend
            fi
            if [ "${{ needs.check-changed-files.outputs.backend }}" != '' ]; then
              docker-compose -f docker-compose.prod.yml up -d backend
            fi
            if [ "${{ needs.check-changed-files.outputs.fileserver }}" != '' ]; then
              docker-compose -f docker-compose.prod.yml up -d fileserver
            fi

      - name: SSH into server for develop
        if: github.ref == 'refs/heads/develop'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "SSH connection successful"
            if [ ! -d /home/ubuntu/SEONSHINE ]; then
              mkdir -p /home/ubuntu/SEONSHINE
              git clone https://github.com/Seonjeongwan/SEONSHINE.git /home/ubuntu/SEONSHINE
            fi
            cd /home/ubuntu/SEONSHINE
            git reset --hard HEAD
            git pull origin develop
            export COMPOSE_HTTP_TIMEOUT=240
            docker-compose -f docker-compose.dev.yml down
            docker-compose -f docker-compose.dev.yml pull

            if [ "${{ needs.check-changed-files.outputs.frontend }}" != '' ]; then
              docker-compose -f docker-compose.dev.yml up -d frontend
            fi
            if [ "${{ needs.check-changed-files.outputs.backend }}" != '' ]; then
              docker-compose -f docker-compose.dev.yml up -d backend
            fi
            if [ "${{ needs.check-changed-files.outputs.fileserver }}" != '' ]; then
              docker-compose -f docker-compose.dev.yml up -d fileserver
            fi
