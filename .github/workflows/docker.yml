name: Build and Deploy

on:
  push:
    branches:
      - main
    # paths:
    #   - "seonshine_frontend/**"
    #   - "seonshine_backend/**"
    #   - "seonshine_db/**"
    #   - "seonshine_fileserver/**"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, backend, db, fileserver]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Create Docker Buildx builder
        run: |
          docker buildx create --name mybuilder --use
          docker buildx inspect --bootstrap

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend image
        if: matrix.service == 'frontend'
        uses: docker/build-push-action@v2
        with:
          context: ./seonshine_frontend
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/seonshine_frontend:latest

      - name: Build and push backend image
        if: matrix.service == 'backend'
        uses: docker/build-push-action@v2
        with:
          context: ./seonshine_backend
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/seonshine_backend:latest

      - name: Build and push db image
        if: matrix.service == 'db'
        uses: docker/build-push-action@v2
        with:
          context: ./seonshine_db
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/seonshine_db:latest

      - name: Build and push fileserver image
        if: matrix.service == 'fileserver'
        uses: docker/build-push-action@v2
        with:
          context: ./seonshine_fileserver
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/seonshine_fileserver:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH key
        run: |
          echo "${{ secrets.SSH_KEY }}" > private_key
          chmod 600 private_key

      - name: SSH into server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "SSH connection successful"
            if [ ! -d /home/ubuntu/SEONSHINE ]; then
              mkdir -p /home/ubuntu/SEONSHINE
              git clone https://github.com/Seonjeongwan/SEONSHINE.git
            fi
            cd /home/ubuntu/SEONSHINE
            if [ -d .git ]; then
              git reset --hard HEAD
              git pull origin main
            else
              rm -rf /home/ubuntu/SEONSHINE/*
              git clone https://github.com/Seonjeongwan/SEONSHINE.git /home/ubuntu/SEONSHINE
              cd /home/ubuntu/SEONSHINE
            fi
            export COMPOSE_HTTP_TIMEOUT=240
            docker-compose -f ./docker-compose.yml pull
            docker-compose -f ./docker-compose.yml up -d

      #dockercompose -f ./docker-compose.yml down 은 모두 제거후 사용
