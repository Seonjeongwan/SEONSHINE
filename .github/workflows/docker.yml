name: Build and Deploy

on:
  push:
    branches:
      - main
      - develop
    paths:
      - "seonshine_frontend/**"
      - "seonshine_backend/**"
      - "seonshine_db/**"
      - "seonshine_fileserver/**"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, backend, db, fileserver]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Create Docker Buildx builder
        run: |
          docker buildx create --name mybuilder --use
          docker buildx inspect --bootstrap
          echo "Docker Buildx builder created"

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.service }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.service }}-

      - name: Verify Dockerfile path for main
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Checking Dockerfile for ${{ matrix.service }} (main branch)"
          ls -l ./seonshine_${{ matrix.service }}/Dockerfile.prod
          cat ./seonshine_${{ matrix.service }}/Dockerfile.prod

      - name: Build and push image for main
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v2
        with:
          context: ./seonshine_${{ matrix.service }}
          dockerfile: ./seonshine_${{ matrix.service }}/Dockerfile.prod
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/seonshine_${{ matrix.service }}:prod
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Verify Dockerfile path for develop
        if: github.ref == 'refs/heads/develop'
        run: |
          echo "Checking Dockerfile for ${{ matrix.service }} (develop branch)"
          ls -l ./seonshine_${{ matrix.service }}/Dockerfile.dev
          cat ./seonshine_${{ matrix.service }}/Dockerfile.dev

      - name: Build and push image for develop
        if: github.ref == 'refs/heads/develop'
        uses: docker/build-push-action@v2
        with:
          context: ./seonshine_${{ matrix.service }}
          dockerfile: ./seonshine_${{ matrix.service }}/Dockerfile.dev
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/seonshine_${{ matrix.service }}:dev
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    strategy:
      matrix:
        service: [frontend, backend, db, fileserver]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH key
        run: |
          echo "${{ secrets.SSH_KEY }}" | tr -d '\r' > private_key
          chmod 600 private_key

      - name: SSH into server for main
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: private_key
          script: |
            echo "SSH connection successful"
            if [ ! -d /home/ubuntu/SEONSHINE ]; then
              mkdir -p /home/ubuntu/SEONSHINE
              git clone https://github.com/Seonjeongwan/SEONSHINE.git /home/ubuntu/SEONSHINE
            fi
            cd /home/ubuntu/SEONSHINE
            if [ -d .git ]; then
              git reset --hard HEAD
              git pull origin main
            else
              rm -rf /home/ubuntu/SEONSHINE/*
              git clone https://github.com/Seonjeongwan/SEONSHINE.git /home/ubuntu/SEONSHINE
            fi
            export COMPOSE_HTTP_TIMEOUT=240
            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml up -d ${{ matrix.service }}

      - name: SSH into server for develop
        if: github.ref == 'refs/heads/develop'
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: private_key
          script: |
            echo "SSH connection successful"
            if [ ! -d /home/ubuntu/SEONSHINE ]; then
              mkdir -p /home/ubuntu/SEONSHINE
              git clone https://github.com/Seonjeongwan/SEONSHINE.git /home/ubuntu/SEONSHINE
            fi
            cd /home/ubuntu/SEONSHINE
            if [ -d .git ]; then
              git reset --hard HEAD
              git pull origin develop
            else
              rm -rf /home/ubuntu/SEONSHINE/*
              git clone https://github.com/Seonjeongwan/SEONSHINE.git /home/ubuntu/SEONSHINE
            fi
            export COMPOSE_HTTP_TIMEOUT=240
            docker-compose -f docker-compose.dev.yml pull
            docker-compose -f docker-compose.dev.yml up -d ${{ matrix.service }}
