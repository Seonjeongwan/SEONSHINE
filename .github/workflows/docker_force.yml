name: Force Build Push Deploy

on:
  workflow_dispatch:

jobs:
  build-and-push-frontend:
    runs-on: ubuntu-latest
    outputs:
      frontend_built: ${{ steps.set-output-frontend.outputs.built }}
    steps:
      - name: Set default output
        id: set-output-frontend
        run: echo "built=false" >> $GITHUB_OUTPUT

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create Docker Buildx builder
        run: |
          docker buildx create --name mybuilder --use
          docker buildx inspect --bootstrap
          echo "Docker Buildx builder created"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-frontend-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-frontend-

      - name: Build and push image for main
        id: build-frontend-main
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v3
        with:
          context: ./seonshine_frontend
          file: ./seonshine_frontend/Dockerfile.prod
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/seonshine_frontend:prod
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push image for develop
        id: build-frontend-develop
        if: github.ref == 'refs/heads/develop'
        uses: docker/build-push-action@v3
        with:
          context: ./seonshine_frontend
          file: ./seonshine_frontend/Dockerfile.dev
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/seonshine_frontend:dev
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Set output
        run: echo "built=true" >> $GITHUB_OUTPUT

  build-and-push-backend:
    runs-on: ubuntu-latest
    outputs:
      backend_built: ${{ steps.set-output-backend.outputs.built }}
    steps:
      - name: Set default output
        id: set-output-backend
        run: echo "built=false" >> $GITHUB_OUTPUT

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create Docker Buildx builder
        run: |
          docker buildx create --name mybuilder --use
          docker buildx inspect --bootstrap
          echo "Docker Buildx builder created"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-backend-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-backend-

      - name: Build and push image for main
        id: build-backend-main
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v3
        with:
          context: ./seonshine_backend
          file: ./seonshine_backend/Dockerfile.prod
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/seonshine_backend:prod
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push image for develop
        id: build-backend-develop
        if: github.ref == 'refs/heads/develop'
        uses: docker/build-push-action@v3
        with:
          context: ./seonshine_backend
          file: ./seonshine_backend/Dockerfile.dev
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/seonshine_backend:dev
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Set output
        run: echo "built=true" >> $GITHUB_OUTPUT

  build-and-push-fileserver:
    runs-on: ubuntu-latest
    outputs:
      fileserver_built: ${{ steps.set-output-fileserver.outputs.built }}
    steps:
      - name: Set default output
        id: set-output-fileserver
        run: echo "built=false" >> $GITHUB_OUTPUT

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create Docker Buildx builder
        run: |
          docker buildx create --name mybuilder --use
          docker buildx inspect --bootstrap
          echo "Docker Buildx builder created"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-fileserver-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-fileserver-

      - name: Build and push image for main
        id: build-fileserver-main
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v3
        with:
          context: ./seonshine_fileserver
          file: ./seonshine_fileserver/Dockerfile.prod
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/seonshine_fileserver:prod
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push image for develop
        id: build-fileserver-develop
        if: github.ref == 'refs/heads/develop'
        uses: docker/build-push-action@v3
        with:
          context: ./seonshine_fileserver
          file: ./seonshine_fileserver/Dockerfile.dev
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/seonshine_fileserver:dev
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Set output
        run: echo "built=true" >> $GITHUB_OUTPUT

  deploy:
    needs:
      - build-and-push-frontend
      - build-and-push-backend
      - build-and-push-fileserver
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          echo "${{ secrets.SSH_KEY }}" | tr -d '\r' > private_key
          chmod 600 private_key

      - name: SSH into server for main
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "SSH connection successful"
            if [ ! -d /home/ubuntu/SEONSHINE ]; then
              mkdir -p /home/ubuntu/SEONSHINE
              git clone https://github.com/Seonjeongwan/SEONSHINE.git /home/ubuntu/SEONSHINE
            fi
            cd /home/ubuntu/SEONSHINE
            git reset --hard HEAD
            git pull origin main
            export COMPOSE_HTTP_TIMEOUT=600
            docker-compose -f docker-compose.prod.yml down
            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml up -d

      - name: SSH into server for develop
        if: github.ref == 'refs/heads/develop'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "SSH connection successful"
            if [ ! -d /home/ubuntu/SEONSHINE ]; then
              mkdir -p /home/ubuntu/SEONSHINE
              git clone https://github.com/Seonjeongwan/SEONSHINE.git /home/ubuntu/SEONSHINE
            fi
            cd /home/ubuntu/SEONSHINE
            git reset --hard HEAD
            git pull origin develop
            export COMPOSE_HTTP_TIMEOUT=600
            docker-compose -f docker-compose.dev.yml down
            docker-compose -f docker-compose.dev.yml pull
            docker-compose -f docker-compose.dev.yml up -d
